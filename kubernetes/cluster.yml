apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: bigtwine
  region: eu-central-1
  version: "1.14"

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: jobsupervisor
      namespace: bigtwine
    attachPolicyARNs:
    - "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"

nodeGroups:
  - name: standard-workers
    desiredCapacity: 3
    instanceType: c5.xlarge
    labels: { role: master }
    iam:
      withAddonPolicies:
        autoScaler: true
    kubeletExtraConfig:
      kubeReserved:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "1Gi"
      kubeReservedCgroup: "/kube-reserved"
      systemReserved:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "1Gi"
      evictionHard:
        memory.available:  "200Mi"
        nodefs.available: "10%"
      featureGates:
        DynamicKubeletConfig: true
        RotateKubeletServerCertificate: true
  - name: spot-workers
    minSize: 0
    maxSize: 3
    labels: { role: worker }
    instancesDistribution:
      maxPrice: 0.10
      instanceTypes: ["c5.xlarge", "c5.large", "t3.xlarge"]
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
      spotInstancePools: 3
    iam:
      withAddonPolicies:
        autoScaler: true
    kubeletExtraConfig:
      kubeReserved:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "1Gi"
      kubeReservedCgroup: "/kube-reserved"
      systemReserved:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "1Gi"
      evictionHard:
        memory.available:  "200Mi"
        nodefs.available: "10%"
      featureGates:
        DynamicKubeletConfig: true
        RotateKubeletServerCertificate: true
